[package]
name = "skia-safe"

description = "Safe Skia Bindings for Rust"
homepage = "https://github.com/rust-skia/rust-skia"
repository = "https://github.com/rust-skia/rust-skia"
documentation = "https://rust-skia.github.io/doc/skia_safe"
readme = "README.md"
# 5 max
keywords = ["skia", "rust-bindings", "vulkan", "opengl", "pdf"]
# 6 max
categories = ["api-bindings", "graphics", "multimedia::images", "rendering::graphics-api", "visualization"] 
license = "MIT"

version = "0.56.0"
authors = ["Armin Sander <armin@replicator.org>"]
edition = "2021"

[lib]
doctest = false

[features]
default = ["binary-cache", "embed-icudtl"]
gl = ["gpu", "skia-bindings/gl"]
egl = ["gl", "skia-bindings/egl"]
x11 = ["gl", "skia-bindings/x11"]
wayland = ["egl", "skia-bindings/wayland"]
vulkan = ["gpu", "skia-bindings/vulkan"]
metal = ["gpu", "skia-bindings/metal"]
d3d = ["gpu", "winapi", "wio", "skia-bindings/d3d"]
textlayout = ["skia-bindings/textlayout"]
svg = ["skia-bindings/svg", "ureq", "base64"]
webp = ["webp-encode", "webp-decode"]
webp-encode = ["skia-bindings/webp-encode"]
webp-decode = ["skia-bindings/webp-decode"]
use-system-jpeg-turbo = ["skia-bindings/use-system-jpeg-turbo"]
binary-cache = ["skia-bindings/binary-cache"]
embed-icudtl = ["skia-bindings/embed-icudtl"]
embed-freetype = ["skia-bindings/embed-freetype"]

# implied only, do not use
gpu = []
shaper = ["textlayout", "skia-bindings/shaper"]

[dependencies]
bitflags = "1.2"
lazy_static = "1.4"
skia-bindings = { version = "=0.56.0", path = "../skia-bindings", default-features = false }

# D3D types
winapi = { version = "0.3.9", features = ["d3d12", "dxgi"], optional = true }

# ComPtr
wio = { version = "0.2.2", optional = true }

# svg
ureq = { version = "2.3.0", optional = true }
base64 = { version = "0.13.0", optional = true }

[dev-dependencies]
serial_test = "0.9"
static_assertions = "1.1"

# gl-window
[target.'cfg(all(not(target_os = "android"), not(target_os = "emscripten")))'.dev-dependencies]
glutin = "0.30"
gl-rs = { package = "gl", version = "0.14.0" }

# metal-window
[target.'cfg(target_os = "macos")'.dev-dependencies]
metal-rs = { package = "metal", version = "0.23.1" }
winit = "0.27.0"
objc = "0.2.7"
cocoa = "0.24.0"
core-graphics-types = "0.1.1"
foreign-types-shared = "0.1.1"
